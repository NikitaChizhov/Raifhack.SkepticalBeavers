// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Raifhack.SkepticalBeavers.Server.Services;

namespace Raifhack.SkepticalBeavers.Server.Migrations
{
    [DbContext(typeof(SnapshotContext))]
    [Migration("20210116185150_First")]
    partial class First
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Raifhack.SkepticalBeavers.Server.Model.Snapshots.AccountDb", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Raifhack.SkepticalBeavers.Server.Model.Snapshots.MenuDb", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AccountDbId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AccountDbId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("Raifhack.SkepticalBeavers.Server.Model.Snapshots.MenuItemDb", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("MenuDbId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Key");

                    b.HasIndex("MenuDbId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("Raifhack.SkepticalBeavers.Server.Model.Snapshots.RestaurantDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AccountDbId")
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AccountDbId");

                    b.HasIndex("MenuId");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("Raifhack.SkepticalBeavers.Server.Model.Snapshots.MenuDb", b =>
                {
                    b.HasOne("Raifhack.SkepticalBeavers.Server.Model.Snapshots.AccountDb", null)
                        .WithMany("Menus")
                        .HasForeignKey("AccountDbId");
                });

            modelBuilder.Entity("Raifhack.SkepticalBeavers.Server.Model.Snapshots.MenuItemDb", b =>
                {
                    b.HasOne("Raifhack.SkepticalBeavers.Server.Model.Snapshots.MenuDb", null)
                        .WithMany("Items")
                        .HasForeignKey("MenuDbId");
                });

            modelBuilder.Entity("Raifhack.SkepticalBeavers.Server.Model.Snapshots.RestaurantDb", b =>
                {
                    b.HasOne("Raifhack.SkepticalBeavers.Server.Model.Snapshots.AccountDb", null)
                        .WithMany("Restaurants")
                        .HasForeignKey("AccountDbId");

                    b.HasOne("Raifhack.SkepticalBeavers.Server.Model.Snapshots.MenuDb", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Raifhack.SkepticalBeavers.Server.Model.Snapshots.AccountDb", b =>
                {
                    b.Navigation("Menus");

                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("Raifhack.SkepticalBeavers.Server.Model.Snapshots.MenuDb", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
